---

# This is a workflow template for Python release.
# It will publish a new version of the package to PyPI and create a release draft in the repository.
# The workflow requires the following secrets to be set in the repository:
# - PYPI_API_TOKEN: PyPI API token to publish the package
# The workflow requires the configuration release-drafter-config.yml file to be placed in the .github folder of the repository.
# The example file can be found there:
# https://github.com/netcracker/qubership-workflow-hub/blob/main/docs/examples/release-drafter-config.yml

name: Python Release
run-name: "${{ github.event.repository.name }} release ${{ inputs.version || inputs.poetry-version-options }}"
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Specify version (optional)'
        required: false
        default: ''
      python-version:
        description: 'Python version to use'
        required: false
        default: '3.11'
      poetry-version-options:
        description: 'Poetry version bump (e.g., patch, minor, major)'
        required: false
        default: 'patch'
      poetry-build-params:
        description: 'Additional poetry build parameters'
        required: false
        default: ''
      pytest-run:
        description: 'Run pytest (true/false)'
        required: true
        type: boolean
        default: true
      pytest-params:
        description: 'Parameters for pytest'
        required: false
        default: '--maxfail=3 -v'

permissions:
  contents: read

jobs:
  pre-build-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Input parameters
        run: |
          echo "Input parameters:" >> $GITHUB_STEP_SUMMARY
          echo "Version: ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Python version: ${{ github.event.inputs.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "Poetry version options: ${{ github.event.inputs.poetry-version-options }}" >> $GITHUB_STEP_SUMMARY
          echo "Poetry build parameters: ${{ github.event.inputs.poetry-build-params }}" >> $GITHUB_STEP_SUMMARY
          echo "Pytest run: ${{ github.event.inputs.pytest-run }}" >> $GITHUB_STEP_SUMMARY
          echo "Pytest parameters: ${{ github.event.inputs.pytest-params }}" >> $GITHUB_STEP_SUMMARY
      - name: Check if tag exists
        if: ${{ inputs.version != '' }}
        id: check_tag
        uses: netcracker/qubership-workflow-hub/actions/tag-action@v1.0.6
        with:
          tag-name: 'v${{ inputs.version }}'
          ref: ${{ github.ref }}
          create-tag: false
          check-tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [pre-build-checks]
    outputs:
      published-version: ${{ steps.publish.outputs.release-version }}
    steps:
      - name: "Prepare app token"
        if: ${{ vars.GH_BUMP_VERSION_APP_ID != '' }}
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: ${{ vars.GH_BUMP_VERSION_APP_ID }}
          private-key: ${{ secrets.GH_BUMP_VERSION_APP_KEY }}
      - name: "Checkout"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}
      - name: "Setup Python ${{ inputs.python-version }}"
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ inputs.python-version }}

      - name: "Publish"
        id: publish
        uses: netcracker/qubership-workflow-hub/actions/poetry-publisher@v1.0.6
        with:
          package_version: ${{ inputs.version }}
          poetry_version_bump: ${{ inputs.poetry-version-options }}
          poetry_build_options: ${{ inputs.poetry-build-params }}
          run_pytest: ${{ inputs.pytest-run }}
          pytest_options: ${{ inputs.pytest-params }}
          publish: "true"
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      - name: "Commit changes"
        run: |
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global user.name "$GITHUB_ACTOR"
          git add .
          git commit -m "Update version to ${{ steps.publish.outputs.release-version }} for release"
          git push -u origin ${{ github.ref }}

  github-release:
    permissions:
      contents: write
      pull-requests: write
    needs: [publish]
    uses: netcracker/qubership-workflow-hub/.github/workflows/release-drafter.yml@v1.0.6
    with:
      version: ${{ needs.publish.outputs.published-version }}
      publish: true
